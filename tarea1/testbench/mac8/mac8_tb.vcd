$date
	Sun Mar 22 15:07:25 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module mac8_tb $end
$var wire 16 ! dout [15:0] $end
$var reg 1 " clk $end
$var reg 8 # din0 [7:0] $end
$var reg 8 $ din1 [7:0] $end
$var reg 1 % rst $end
$scope module uut $end
$var wire 1 " clk $end
$var wire 8 & din0 [7:0] $end
$var wire 8 ' din1 [7:0] $end
$var wire 16 ( dout [15:0] $end
$var wire 1 % rst $end
$var reg 16 ) accumulator [15:0] $end
$var reg 4 * counter [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 *
b0 )
b0 (
bx '
bx &
0%
bx $
bx #
0"
b0 !
$end
#5
1"
#10
0"
b11 $
b11 '
b100 #
b100 &
1%
#15
b1100 !
b1100 (
b1100 )
b1 *
1"
#20
0"
#25
b11000 !
b11000 (
b11000 )
b10 *
1"
#30
0"
#35
b100100 !
b100100 (
b100100 )
b11 *
1"
#40
0"
#45
b110000 !
b110000 (
b110000 )
b100 *
1"
#50
0"
b111 $
b111 '
#55
b1001100 !
b1001100 (
b1001100 )
b101 *
1"
#60
0"
#65
b1101000 !
b1101000 (
b1101000 )
b110 *
1"
#70
0"
#75
b10000100 !
b10000100 (
b10000100 )
b111 *
1"
#80
0"
#85
b0 !
b0 (
b0 )
b0 *
1"
#90
0"
#95
b11100 !
b11100 (
b11100 )
b1 *
1"
#100
0"
#105
b111000 !
b111000 (
b111000 )
b10 *
1"
#110
0"
